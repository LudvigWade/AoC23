import java.io.*;
import java.util.*;

public class Day5Task1 {

	public static void main(String[] args) throws FileNotFoundException {
		Scanner s = new Scanner(new File("data"));
		Set<Long> seeds = new HashSet<Long>();
		Set<Long> soils = new HashSet<Long>();
		Set<Long> fertilizers = new HashSet<Long>();
		Set<Long> waters = new HashSet<Long>();
		Set<Long> lights = new HashSet<Long>();
		Set<Long> temperatures = new HashSet<Long>();
		Set<Long> humidities = new HashSet<Long>();
		Set<Long> locations = new HashSet<Long>();
		Set<Long> remove = new HashSet<Long>();
		Long nbr1,nbr2,nbr3;
		
		while (s.hasNext()) {
			String a = s.next();
			if (s.next().equals("seeds:")) {
				a = s.next();
				while (!a.equals("seed-to-soil")) {
					seeds.add(Long.parseLong(a));
					a = s.next();
				}
			}
			if (a.equals("seed-to-soil")) {
				s.next();
				while (!a.equals("soil-to-fertilizer")) {
					nbr1 = s.nextLong();
					nbr2 = s.nextLong();
					nbr3 = s.nextLong();
					for (Long p : seeds) {
						if (p < nbr1+nbr3 && p >= nbr1) {
							soils.add(nbr2+p-nbr1);
							remove.add(p);
						}
					}
					for (Long p : remove) {
						seeds.remove(p);
					}
				}
				for (Long p : seeds) {
					soils.add(p);
				}
			}
			if (a.equals("soil-to-fertilizer")) {
				String f = s.next();
				while (!a.equals("fertilizer-to-water")) {
					nbr1 = s.nextLong();
					nbr2 = s.nextLong();
					nbr3 = s.nextLong();
					for (Long p : soils) {
						if (p < nbr1+nbr3 && p >= nbr1) {
							fertilizers.add(nbr2+p-nbr1);
							remove.add(p);
						}
					}
					for (Long p : remove) {
						soils.remove(p);
					}
				}
				for (Long p : soils) {
					fertilizers.add(p);
				}
			}
			if (a.equals("fertilizer-to-water")) {
				s.next();
				while (!a.equals("water-to-light")) {
					nbr1 = s.nextLong();
					nbr2 = s.nextLong();
					nbr3 = s.nextLong();
					for (Long p : fertilizers) {
						if (p < nbr1+nbr3 && p >= nbr1) {
							waters.add(nbr2+p-nbr1);
							remove.add(p);
						}
					}
					for (Long p : remove) {
						fertilizers.remove(p);
					}
				}
				for (Long p : fertilizers) {
					waters.add(p);
				}
			}
			if (a.equals("water-to-light")) {
				s.next();
				while (!a.equals("light-to-temperature")) {
					nbr1 = s.nextLong();
					nbr2 = s.nextLong();
					nbr3 = s.nextLong();
					for (Long p : waters) {
						if (p < nbr1+nbr3 && p >= nbr1) {
							lights.add(nbr2+p-nbr1);
							remove.add(p);
						}
					}
					for (Long p : remove) {
						waters.remove(p);
					}
				}
				for (Long p : waters) {
					lights.add(p);
				}
			}
			if (a.equals("light-to-temperature")) {
				s.next();
				while (!a.equals("temperature-to-humidity")) {
					nbr1 = s.nextLong();
					nbr2 = s.nextLong();
					nbr3 = s.nextLong();
					for (Long p : lights) {
						if (p < nbr1+nbr3 && p >= nbr1) {
							temperatures.add(nbr2+p-nbr1);
							remove.add(p);
						}
					}
					for (Long p : remove) {
						lights.remove(p);
					}
				}
				for (Long p : lights) {
					temperatures.add(p);
				}
			}
			if (a.equals("temperature-to-humidity")) {
				s.next();
				while (!a.equals("humidity-to-location")) {
					nbr1 = s.nextLong();
					nbr2 = s.nextLong();
					nbr3 = s.nextLong();
					for (Long p : temperatures) {
						if (p < nbr1+nbr3 && p >= nbr1) {
							humidities.add(nbr2+p-nbr1);
							remove.add(p);
						}
					}
					for (Long p : remove) {
						temperatures.remove(p);
					}
				}
				for (Long p : temperatures) {
					humidities.add(p);
				}
			}
			if (a.equals("humidity-to-location")) {
				s.next();
				while (s.hasNext()) {
					nbr1 = s.nextLong();
					nbr2 = s.nextLong();
					nbr3 = s.nextLong();
					for (Long p : humidities) {
						if (p < nbr1+nbr3 && p >= nbr1) {
							locations.add(nbr2+p-nbr1);
							remove.add(p);
						}
					}
					for (Long p : remove) {
						humidities.remove(p);
					}
				}
				for (Long p : humidities) {
					locations.add(p);
				}
			}
			System.out.println(locations.toString());
		}
	}

}
